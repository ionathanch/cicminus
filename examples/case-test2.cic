data nat : Type := O : nat | S : nat -> nat.

data I : nat -> nat -> nat -> Type := C : I O O O.


define t1 := fun (n1 n2 : nat) (v : I (S n1) n1 n1) =>
             < I O O O > case v1 := v in [(n0 y x: nat)] I (S x) y n0 of
                         | C => C
                         end.

check t1.
