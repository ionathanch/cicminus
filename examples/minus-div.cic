data ℕ : Type := O : ℕ | S : ℕ → ℕ.

define minus : ℕ → ℕ → ℕ :=
   fix 1 minus : ℕ* → ℕ → ℕ* :=
     λ (m : ℕ) (n:ℕ) =>
     < ℕ >
     case m of
     | O => O
     | S m' => < ℕ > case n of
               | O => m
               | S n' => minus m' n'
               end
     end.


define div : ℕ → ℕ → ℕ :=
   fix 1 div : ℕ* → ℕ → ℕ* :=
     λ (m :ℕ)(n:ℕ) =>
     < ℕ >
     case m of
     | O => O
     | S m' => S (div ((fix 1 minus : ℕ* → ℕ → ℕ* :=
                       λ (m : ℕ) (n:ℕ) =>
                       < ℕ > case m of
                               | O => O
                               | S m' => < ℕ > case n of
                                         | O => m
                                         | S n' => minus m' n'
                                        end
                       end) m' n) n)
     end.

check div.
